% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elimCellDups.r
\name{elimCellDups}
\alias{elimCellDups}
\title{Thin spatial points so that no more than one point falls within each cell of a raster}
\usage{
elimCellDups(x, rast, longLat = NULL, priority = NULL)
}
\arguments{
\item{x}{Data frame, matrix, SpatialPoints*, or SpatVector object.}

\item{rast}{Raster* or SpatRaster object.}

\item{longLat}{Two-element character list \emph{or} two-element integer list. If \code{x} is a data frame then this should be a character list specifying the names of the fields in \code{x} \emph{or} a two-element list of integers that correspond to longitude and latitude (in that order). For example, \code{c('long', 'lat')} or \code{c(1, 2)}. If \code{x} is a matrix then this is a two-element list indicating the column numbers in \code{x} that represent longitude and latitude. For example, \code{c(1, 2)}. If \code{x} is a SpatialPoints object then this is ignored.}

\item{priority}{Either \code{NULL}, in which case for every cell with more than one point the first point in \code{x} is chosen, or a numeric or character list indicating preference for some points over others when points occur in the same cell. There should be the same number of elements in \code{priority} as there are rows or points in \code{x}. Priority is assigned by the natural sort order of \code{priority}. For example, for 3 points in a cell for which \code{priority} is \code{c(2, 1, 3)}, the script will retain the second point and discard the rest. Similarly, if \code{priority} is \code{c('z', 'y', 'x')} then the third point will be chosen. Priorities assigned to points in other cells are ignored when thinning points in a particular cell.}
}
\value{
Object of class \code{x}.
}
\description{
This function thins spatial points such that no more than one point falls within each cell of a reference raster. If more than one point falls in a cell the first point in the input data is retained unless the user specifies a priority for keeping points.
}
\examples{

x <- data.frame(long=c(-90.1, -90.1, -90.2, 20), lat=c(38, 38, 38, 38), point=letters[1:4])
rast <- raster::raster() # empty raster covering entire world with 1-degree resolution
elimCellDups(x, rast, longLat=c(1, 2))
elimCellDups(x, rast, longLat=c(1, 2), priority=c(3, 2, 1, 0))

}
